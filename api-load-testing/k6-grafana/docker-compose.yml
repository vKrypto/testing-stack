version: '3.4'

networks:
  testing_network:

volumes:
  influxdb_data:

services:
  influxdb:
    image: influxdb:1.8
    networks:
      - testing_network
    ports:
      - "8086:8086"
    environment:
      - INFLUXDB_DB=k6
    volumes:
      - influxdb_data:/var/lib/influxdb  
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8086/ping || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
    deploy:
      replicas: 1
      restart_policy:
        condition: on-failure

  grafana:
    image: grafana/grafana:latest
    networks:
      - testing_network
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin     # Set your custom username
      - GF_SECURITY_ADMIN_PASSWORD=1234 # Set your custom password
      - GF_AUTH_ANONYMOUS_ORG_ROLE=admin
      - GF_AUTH_ANONYMOUS_ENABLED=false
      - GF_AUTH_BASIC_ENABLED=false
      - GF_DATASOURCE_URL=http://influxdb:8086
    volumes:
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    depends_on:
      - influxdb
        
  fastapi:
    image: python:3.12.7-alpine3.19
    labels:
      - "traefik.http.routers.fastapi.rule=Host(`fastapi.local`)"
      - "traefik.http.services.fastapi.loadbalancer.server.port=8000"
    networks:
      - testing_network
    ports:
      - 8000:8000
    volumes:
      - ./fastapi:/app
    command: sh -c "cd /app && pip install -r requirements.txt && uvicorn main:app --host 0.0.0.0 --port 8000 --workers=5"
    # healthcheck:
    #   test: ["CMD-SHELL", "curl -f http://fastapi:8000/ping"]
    #   interval: 30s
    #   timeout: 10s
    #   retries: 5
    depends_on:
      - influxdb
    deploy:
      replicas: 8
      update_config:
        parallelism: 5
        delay: 5s
      restart_policy:
        condition: on-failure
      
  cadvisor:
    image: gcr.io/cadvisor/cadvisor:latest
    ports:
      - "8080:8080"
    networks:
      - testing_network
    # deprecated 
    devices:
      - "/dev/kmsg:/dev/kmsg"  # To get kernel logs (optional)
    privileged: true  # deprecated 
    environment:
      - INFLUXDB_HOST=influxdb
      - INFLUXDB_PORT=8086
      - INFLUXDB_DB=k6
    volumes:
      - "/:/rootfs:ro"  # Mount root filesystem to access all system data
      - "/sys/fs/cgroup:/sys/fs/cgroup:ro"  # Ensure cgroups are accessi
      - "/var/run:/var/run:ro"  # Mount /var/run in read-only mode
      - "/sys:/sys:ro"  # Mount /sys for system stats
      - "/var/lib/docker/:/var/lib/docker:ro"  # Mount Docker directory to access container stats
      - "/dev/disk/:/dev/disk:ro"  # Access disk information in read-only mode

  k6:
    image: grafana/k6:latest
    networks:
      - testing_network
    environment:
      - K6_OUT=influxdb=http://influxdb:8086/k6
    volumes:
      - ./k6:/scripts
    command: run /scripts/run_docker.js
    depends_on:
      fastapi:
        condition: service_healthy

 